name: nanumsa CI

on:
    push:
        branches:
            - "*"
    workflow_dispatch:
        inputs:
            # environment:
            #     description: "deployment environment"
            #     required: true
            #     default: "production" # temp
            #     type: choice
            #     options:
            #         - development
            #         - production
            version-update:
                description: "version-update"
                required: false
                default: "patch"
                type: choice
                options:
                    - major
                    - minor
                    - patch

permissions:
    contents: write
    issues: read
    checks: write
    pull-requests: write

jobs:
    build-and-push-image:
        runs-on: self-hosted
        outputs:
            NEW_VERSION: ${{ steps.build-and-push-image.outputs.NEW_VERSION }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Set pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 9

            - name: Set Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 20

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-
              continue-on-error: true

            - name: Set Docker hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Extract latest version tag
              id: get-latest-tag
              run: |
                  tags=$(curl -s https://registry.hub.docker.com/v2/repositories/smilemeeso/nanumsa-front/tags | jq -r '.results[].name')

                  latest_count=$(echo "$tags" | grep -w "latest" | wc -l)
                  all_tags=($(echo "$tags"))

                  if [ "$latest_count" -lt 2 ]; then
                      latest_version="0.0.0"
                  else
                      latest_version=$(printf "%s\n" "${all_tags[@]}" | grep -v "latest" | head -n 1 || echo "0.0.0")
                  fi

                  echo "Latest version: $latest_version"
                  echo "latest=$latest_version" >> $GITHUB_ENV

            - name: Calculate new version
              id: calculate-version
              run: |
                  IFS='.' read -r major minor patch <<< "${{ env.latest }}"
                  case "${{ inputs.version-update }}" in
                    patch)
                      patch=$((patch + 1))
                      ;;
                    minor)
                      minor=$((minor + 1))
                      patch=0
                      ;;
                    major)
                      major=$((major + 1))
                      minor=0
                      patch=0
                      ;;
                  esac
                  new_version="${major}.${minor}.${patch}"
                  echo "NEW_VERSION=$new_version" >> $GITHUB_OUTPUT
                  echo "new_version=$new_version" >> $GITHUB_ENV
                  echo "new_version=$new_version"

            - name: Build and tag Docker image
              run: |
                  docker build -t smilemeeso/nanumsa-front:latest -t smilemeeso/nanumsa-front:${{ env.new_version }} .

            - name: Push Docker image
              run: |
                  docker push smilemeeso/nanumsa-front:latest
                  docker push smilemeeso/nanumsa-front:$new_version

    test:
        runs-on: self-hosted
        needs: build-and-push-image
        steps:
            - name: test
              run: |
                  echo "image-name: ${{ needs.build-and-push-image.outputs.NEW_VERSION }}"

    call-deploy:
        uses: ./.github/workflows/kustomize.yaml
        needs: build-and-push-image
        secrets: inherit
        with:
            image-name: "nanumsa-front"
            new-version: ${{ needs.build-and-push-image.outputs.NEW_VERSION }}
